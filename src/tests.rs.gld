# This file is generated by gilder. Do not edit it manually.
1738347391650379682
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Ok([])"
"Err(\"Not a function: <T> (T) -> (T) at (7, 1)\")"
"local function main(a)\nlocal b = 1;\nreturn a*2+b\nend\n"
"local function main()\nlocal b = 1+2;\nend\n"
"local a = {[1] = 1, [2] = 2};\n"
"local a = 1 or \"a\" and 2;\n"
"local a = {f = function(a)\nreturn a*2\nend};\n"
"local function f()\nf();\nend\n"
"local function f()\n#{[1] = 1, [2] = 2, [3] = 3};\nend\n"
"local t = {};\nt[{[1] = 1, [2] = 2}] = 3;\nt[function()\nend] = \"a\";\n"
"{[1] = \"1\", [2] = \"2\", [\"3\"] = \"3\"};\n"
"local f = function(a, b)\nend;\nlocal f = function(a)\nend;\n"
"for i = 1, 10 do\nprint(i);\nend\nfor i = 1, 10, 2 do\nprint(i);\nend\n"
"for k, v in pairs({[1] = 1, [2] = 2, [3] = 3}) do\nprint(k, v);\nend\n"
"local a, b = 1, 2;\nb, a = a, b;\n"
"local function f(a, b)\nreturn a, b\nend\nlocal a, b = f(1, \"2\");\nlocal a, b = f(1, \"2\"), true;\n"
"local a = {type = \"user\", name = \"carrotflakes\"};\n"
"local function f(a)\nreturn a\nend\nlocal a = f(1);\nlocal a = f(\"a\");\n"
"local function f(a)\nreturn {get = function()\nreturn a\nend}\nend\nlocal a = f(1);\nprint(a[\"get\"]());\n"
"local function f(a)\nreturn a\nend\nf(1);\nf(\"1\");\n"
"Err(\"Type mismatch, expected num, got \\\"a\\\" at (1, 1)\")"
"Err(\"Type mismatch, expected {1: 1, 2: 2}, got {1: 1, 2: 3} at (1, 1)\")"
"Err(\"Type mismatch, expected {1: 1, 2: 2}, got {1: 1} at (1, 1)\")"
"Err(\"Type mismatch, expected {1: 1, 2: 2}, got {1: 1, 2: 2, 3: 3} at (1, 1)\")"
"Ok([])"
"Err(\"Type mismatch, expected {1: 1, [num]: str}, got {1: 1, 2: 2, 3: 3} at (1, 1)\")"
"Err(\"Type mismatch, expected {1: 1, [str]: num}, got {1: 1, 2: 2, 3: 3} at (1, 1)\")"
"Err(\"Type mismatch, expected (num, num) -> (()), got (num) -> (()) at (1, 1)\")"
"Err(\"Type mismatch, expected (num, str) -> (num, str), got (num) -> (1) at (1, 1)\")"
"Ok([])"
"Ok([])"
"Err(\"Type mismatch, expected num, got \\\"a\\\" at (1, 2)\")"
"Err(\"Type mismatch, expected num, got (num | ()) at (1, 21)\")"
"Ok([])"
"Err(\"Type mismatch, expected num, got () at (1, 29)\")"
"Ok([])"
"Err(\"Type mismatch, expected str, got num at (1, 47)\")"
"Ok([])"
"Err(\"Invalid index type: str at (1, 96)\")"
"Ok([])"
"Ok([])"
